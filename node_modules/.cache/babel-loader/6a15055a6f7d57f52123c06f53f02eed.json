{"ast":null,"code":"var _jsxFileName = \"/Users/gojosatoru/Documents/GitHub/RET-boilerplate/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport AggregatorV3ABI from \"./AggregatorV3ABI.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [connectButtonText, setConnectButtonText] = useState(\"Connect Wallet\");\n\n  const connectWalletHandler = () => {\n    if (window.ethereum) {\n      window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      }).then(result => {\n        accountChangeHandler(result[0]);\n        setConnectButtonText(\"Wallet Connected\");\n      });\n    } else {\n      setErrorMessage(\"Install MetaMask!\");\n    }\n  };\n\n  const accountChangeHandler = newAccount => {\n    setDefaultAccount(newAccount);\n  };\n\n  let provider = new ethers.providers.Web3Provider(window.ethereum);\n  let signer = provider.getSigner();\n  const ConAd = \"0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419\";\n  const Contract = new ethers.Contract(ConAd, AggregatorV3ABI, signer);\n\n  const funcy = async () => {\n    let roundData = await priceFeed.latestRoundData();\n    let decimals = await priceFeed.decimals();\n    return Number((roundData.answer.toString() / Math.pow(10, decimals)).toFixed(2));\n  };\n\n  console.log(Contract);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-screen flex flex-col  items-center bg-neutral-500 pt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl text-white w-2/5  h-20 border-b-2 border-white flex justify-center items-center\",\n      children: \"Ethers.js, React, Tailwind Boiler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: funcy,\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"absolute top-4 right-8 border-2 bg-gradient-to-tr from-neutral-700 to-neutral-600 border-white text-white rounded-xl w-40 p-1\",\n      onClick: connectWalletHandler,\n      children: connectButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-white text-2xl absolute bottom-4 opacity-50\",\n      children: defaultAccount == null ? \"No Wallet Connected\" : defaultAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2Bp//eZbEzqOqEYIh0o59r8cDuo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gojosatoru/Documents/GitHub/RET-boilerplate/src/App.js"],"names":["React","useState","ethers","AggregatorV3ABI","App","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","connectButtonText","setConnectButtonText","connectWalletHandler","window","ethereum","request","method","then","result","accountChangeHandler","newAccount","provider","providers","Web3Provider","signer","getSigner","ConAd","Contract","funcy","roundData","priceFeed","latestRoundData","decimals","Number","answer","toString","Math","pow","toFixed","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACQ,iBAAD,EAAoBC,oBAApB,IAA4CT,QAAQ,CAAC,gBAAD,CAA1D;;AAEA,QAAMU,oBAAoB,GAAG,MAAM;AACjC,QAAIC,MAAM,CAACC,QAAX,EAAqB;AACnBD,MAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAxB,EAA2DC,IAA3D,CAAiEC,MAAD,IAAY;AAC1EC,QAAAA,oBAAoB,CAACD,MAAM,CAAC,CAAD,CAAP,CAApB;AACAP,QAAAA,oBAAoB,CAAC,kBAAD,CAApB;AACD,OAHD;AAID,KALD,MAKO;AACLJ,MAAAA,eAAe,CAAC,mBAAD,CAAf;AACD;AACF,GATD;;AAWA,QAAMY,oBAAoB,GAAIC,UAAD,IAAgB;AAC3CX,IAAAA,iBAAiB,CAACW,UAAD,CAAjB;AACD,GAFD;;AAIA,MAAIC,QAAQ,GAAG,IAAIlB,MAAM,CAACmB,SAAP,CAAiBC,YAArB,CAAkCV,MAAM,CAACC,QAAzC,CAAf;AACA,MAAIU,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAb;AACA,QAAMC,KAAK,GAAG,4CAAd;AACA,QAAMC,QAAQ,GAAG,IAAIxB,MAAM,CAACwB,QAAX,CAAoBD,KAApB,EAA2BtB,eAA3B,EAA4CoB,MAA5C,CAAjB;;AAEA,QAAMI,KAAK,GAAG,YAAY;AACxB,QAAIC,SAAS,GAAG,MAAMC,SAAS,CAACC,eAAV,EAAtB;AACA,QAAIC,QAAQ,GAAG,MAAMF,SAAS,CAACE,QAAV,EAArB;AACA,WAAOC,MAAM,CAAC,CAACJ,SAAS,CAACK,MAAV,CAAiBC,QAAjB,KAA8BC,IAAI,CAACC,GAAL,CAAS,EAAT,EAAaL,QAAb,CAA/B,EAAuDM,OAAvD,CAA+D,CAA/D,CAAD,CAAb;AACD,GAJD;;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,mEAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,0FAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AACE,MAAA,SAAS,EAAC,+HADZ;AAEE,MAAA,OAAO,EAAEhB,oBAFX;AAAA,gBAIGF;AAJH;AAAA;AAAA;AAAA;AAAA,YAHF,eASE;AAAI,MAAA,SAAS,EAAC,kDAAd;AAAA,gBAAkEF,cAAc,IAAI,IAAlB,GAAyB,qBAAzB,GAAiDA;AAAnH;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA9CQH,G;;KAAAA,G;AAgDT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\"\nimport { ethers } from \"ethers\"\nimport AggregatorV3ABI from \"./AggregatorV3ABI.json\"\n\nfunction App() {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [defaultAccount, setDefaultAccount] = useState(null)\n  const [connectButtonText, setConnectButtonText] = useState(\"Connect Wallet\")\n\n  const connectWalletHandler = () => {\n    if (window.ethereum) {\n      window.ethereum.request({ method: \"eth_requestAccounts\" }).then((result) => {\n        accountChangeHandler(result[0])\n        setConnectButtonText(\"Wallet Connected\")\n      })\n    } else {\n      setErrorMessage(\"Install MetaMask!\")\n    }\n  }\n\n  const accountChangeHandler = (newAccount) => {\n    setDefaultAccount(newAccount)\n  }\n\n  let provider = new ethers.providers.Web3Provider(window.ethereum)\n  let signer = provider.getSigner()\n  const ConAd = \"0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419\"\n  const Contract = new ethers.Contract(ConAd, AggregatorV3ABI, signer)\n\n  const funcy = async () => {\n    let roundData = await priceFeed.latestRoundData()\n    let decimals = await priceFeed.decimals()\n    return Number((roundData.answer.toString() / Math.pow(10, decimals)).toFixed(2))\n  }\n\n  console.log(Contract)\n\n  return (\n    <div className=\"w-screen h-screen flex flex-col  items-center bg-neutral-500 pt-4\">\n      <h1 className=\"text-4xl text-white w-2/5  h-20 border-b-2 border-white flex justify-center items-center\">Ethers.js, React, Tailwind Boiler</h1>\n      <button onClick={funcy}>Click</button>\n      <button\n        className=\"absolute top-4 right-8 border-2 bg-gradient-to-tr from-neutral-700 to-neutral-600 border-white text-white rounded-xl w-40 p-1\"\n        onClick={connectWalletHandler}\n      >\n        {connectButtonText}\n      </button>\n      <h2 className=\"text-white text-2xl absolute bottom-4 opacity-50\">{defaultAccount == null ? \"No Wallet Connected\" : defaultAccount}</h2>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}